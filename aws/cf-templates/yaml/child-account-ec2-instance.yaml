AWSTemplateFormatVersion: 2010-09-09
Description: |
  This template deploys EC2 isntances for Cloud One project
Parameters:
  Environment:
    Description: Environment
    Type: String
    AllowedValues:
      - DEV
      - TEST
      - STAGE
      - PROD
  VPC:
    Description: Select VPC ID for EC2 Instance
    Type: 'AWS::EC2::VPC::Id'
  Subnet:
    Description: Select SubnetId for EC2 Instance
    Type: 'AWS::EC2::Subnet::Id'
  AMI:
    Description: Select AMI ID for EC2 Instance
    Type: 'AWS::EC2::Image::Id'
  InstanceType:
    Description: Select the EC2 Instance Type
    Type: String
    AllowedValues:
      - t3.nano
      - t3.micro
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - t3.2xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - m5.8xlarge
  SecurityGroup:
    Description: Select Security Group IDs for EC2 Instance
    Type: 'List<AWS::EC2::SecurityGroup::Id>'
  KeyPair:
    Description: Select Key Pair for EC2 Instance
    Type: 'AWS::EC2::KeyPair::KeyName'
  Name:
    Description: Name of the EC2 Instance; follows NCI naming convention nciws-p1234
    Type: String
    AllowedPattern: .+
    Default: nciws-xxxxx
  Function:
    Description: 'Specific business function of the larger project, not the project name'
    Type: String
  Created:
    Description: Creation Date MM-DD-YYYY
    Type: String
    Default: mm-dd-yyyy
  Creator:
    Description: Name of user launching this template
    Type: String
  DOC:
    Description: 'Division, Office, or Center of the Business Owner for this system.'
    Type: String
    Default: CBIIT
  FederalSystemOwner:
    Description: The first and last name of the Federal system owner.
    Type: String
  OS:
    Description: Operating system of the EC2 instance.
    Type: String
    AllowedValues:
      - 'CentOS 7.x,'
      - RHEL7
      - Window 2012
      - Window 2016
  IC:
    Description: The Institute that owns/sponsors this system.
    Type: String
    Default: NCI
  PatchGroup:
    Description: Assigned Patch Group for EC2 Instance.
    Type: String
    AllowedValues:
      - Non-Prod
      - Prod
  Project:
    Description: >-
      Project name that may span multiple systems; This may also be the business
      service provided by this system.
    Type: String
Metadata:
  'AWS::CloudFormation::Interface':
    ParameterGroups:
      - Label:
          default: General Configuration for EC2 Instance
        Parameters:
          - Environment
          - VPC
          - Subnet
          - AMI
          - InstanceType
          - SecurityGroup
          - KeyPair
      - Label:
          default: Required Tags for EC2 Instance
        Parameters:
          - Name
          - Function
          - Created
          - Creator
          - DOC
          - FederalSystemOwner
          - OS
          - IC
          - PatchGroup
          - Project
Resources:
  ec2Instance:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: !Ref AMI
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyPair
      SecurityGroupIds: !Ref SecurityGroup
      SubnetId: !Ref Subnet
      IamInstanceProfile: ec2-role-ssm-cloudwatch-access
      UserData: !Base64 
        'Fn::Sub': >
          #!/bin/bash

          # set debug mode

          set -x


          #output log of ec2 userdata to /var/log/user-data.log

          exec > >(tee /var/log/user-data.log|logger -t user-data -s
          2>/dev/console) 2>&1

          # create and put some content in the file

          touch /home/centos/apphost_ec2_userdata.txt

          (

          cat << 'EOP'

          Hey there AppHosting Team debug verification file!!!

          EOP

          ) > /home/centos/apphost_ec2_userdata.txt


          #Checking if Ansible is presnt

          command -v ansible >/dev/null 2>&1 ||

          { echo >&2 "Ansible is not installed. Installing..";

          sudo pip install --upgrade pip

          sudo pip install ansible

          #sudo pip install git+https://github.com/ansible/ansible.git@devel

          sudo pip install boto3

          #sudo pip install botocore

          ansible --version

          }

          #Checking if git is presnt

          command -v git >/dev/null 2>&1 ||

          { echo >&2 "Git is not installed. Installing..";

          sudo yum -y install git git-svn

          }

          hostnamectl set-hostname --static ${Name}.nci.nih.gov

          hostname

          mkdir -p /tmp/run-ansible

          cd /tmp/run-ansible

          wget
          https://ncirepohub.nci.nih.gov/nexus/repository/raw-cbiit-private-hosted/cbiit/centoslinuxec2.tar

          tar xf centoslinuxec2.tar

          ansible-playbook configure-centos-site.yml --extra-var
          "hostname=${Name} tier=${Environment}"

          sleep 60

          rm -rf centoslinuxec2.tar
      Tags:
        - Key: Name
          Value: !Ref Name
        - Key: Function
          Value: !Ref Function
        - Key: backup
          Value: required
        - Key: Created
          Value: !Ref Created
        - Key: Creator
          Value: !Ref Creator
        - Key: DOC
          Value: !Ref DOC
        - Key: Environment Tier
          Value: !Ref Environment
        - Key: Federal System Owner
          Value: !Ref FederalSystemOwner
        - Key: OS
          Value: !Ref OS
        - Key: IC
          Value: !Ref IC
        - Key: Patch Group
          Value: !Ref PatchGroup
        - Key: Project
          Value: !Ref Project